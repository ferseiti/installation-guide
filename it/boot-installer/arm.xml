<!-- retain these comments for translator revision tracking -->
<!-- original version: 69188 -->

  <sect2 arch="arm" id="boot-image-formats">
  <!-- <title>Boot image formats</title> -->
  <title>Formati delle immagini d'avvio</title>
<para>

<!--
On ARM-based systems in most cases one of two formats for boot images
is used: a) standard Linux zImage-format kernels
(<quote>vmlinuz</quote>) in conjunction with standard Linux initial
ramdisks (<quote>initrd.gz</quote>) or b) uImage-format kernels
(<quote>uImage</quote>) in conjunction with corresponding initial
ramdisks (<quote>uInitrd</quote>).
-->

Sulla maggior parte dei sistemi ARM è utilizzato uno tra questi due
formati per le immagini di avvio: a) kernel Linux standard
(<quote>vmlinuz</quote>) insieme ai tradizionali ramdisk iniziali di
Linux (<quote>initrd.gz</quote>) oppure b) kernel in formato uImage
insieme al suo ramdisk iniziale (<quote>uInitrd</quote>).

</para><para>

<!--
uImage/uInitrd are image formats designed for the u-boot firmware that
is used on many ARM-based systems. Older u-boot versions can only
boot files in uImage/uInitrd format, so these are often used on
older armel systems. Newer u-boot versions can - besides booting
uImages/uInitrds - also boot standard Linux kernels and ramdisk images,
but the command syntax to do that is slightly different from that
for booting uImages.
-->

uImage/uInitrd sono formati pensati per il firmware u-boot, presente
su molti sistemi ARM. Le versioni di u-boot più vecchie possono avviare
solo file nel formato uImage/uInitrd, quindi spesso sono usate sui
sistemi armel più vecchi. Le versioni di u-boot più recenti sono in
grado di avviare ovviamente le immagini uImages/uInitrds ma riescono ad
avviare anche i kernel e i ramdisk in formato Linux, la sintassi del
comando per avviare le immagini in formato Linux è leggermente diversa
da quella del comando per avviare le immagini uImage.

</para><para>

<!--
For systems using a multiplatform kernel, besides kernel and initial
ramdisk a so-called device-tree file (or device-tree blob,
<quote>dtb</quote>) is needed. It is specific to each supported system
and contains a description of the particular hardware.
-->

Per i sistemi che usano un kernel multipiattaforma, oltre al kernel e
al ramdisk, è necessario anche un cosiddetto file con l'albero dei
dispositivi (device-tree oppure device-tree blob, <quote>dtb</quote>).
Tale file è specifico per ciscun sistema e contiene la descrizione
dell'hardware.

</para>
  </sect2>

  <sect2 arch="arm" id="boot-tftp">
  <!-- <title>Booting by TFTP</title> -->
  <title>Avvio con TFTP</title>

&boot-installer-intro-net.xml;

   <sect3 arch="arm" id="boot-tftp-uboot">
   <!-- <title>TFTP-booting in u-boot</title> -->
   <title>Avvio da TFTP con u-boot</title>
<para>

<!--
Network booting on systems using the u-boot firmware consists of
three steps: a) configuring the network, b) loading the images
(kernel/initial ramdisk/dtb) into memory and c) actually executing
the previosly loaded code.
-->

L'avvio da rete per i sistemi che usano il firmware u-boot consiste di
tre passi: a) configurazione della rete b) caricamento delle immagini
(kernel, ramdisk e dtb) in memoria c) l'esecuzione del codice appena
caricato.

</para><para>

<!--
First you have to configure the network, either automatically via
DHCP by running
-->

Il primo passo è configurare la rete, automaticamente tramite DHCP con

<informalexample><screen>
setenv autoload no
dhcp
</screen></informalexample>

<!--
or manually by setting several environment variables
-->

oppure manualmente impostando alcune variabili d'ambiente

<informalexample><screen>
setenv ipaddr <!-- &lt;ip address of the client&gt; -->&lt;indirizzo ip del client&gt;
setenv netmask <!-- &lt;netmask&gt; -->&lt;maschera di rete&gt;
setenv serverip <!-- &lt;ip address of the tftp server&gt; -->&lt;indirizzo ip del server tftp&gt;
setenv dnsip <!-- &lt;ip address of the nameserver&gt; -->&lt;indirizzo ip del nameserver&gt;
setenv gatewayip <!-- &lt;ip address of the default gateway&gt; -->&lt;indirizzo ip del gateway predefinito&gt;
</screen></informalexample>

<!--
If you prefer, you can make these settings permanent by running
-->

È possibile salvare in modo permanente queste impostazioni eseguendo

<informalexample><screen>
saveenv
</screen></informalexample>

</para><para>

<!--
Afterwards you need to load the the images (kernel/initial
ramdisk/dtb) into memory. This is done with the tftpboot command,
which has to be provided with the address at which the image
shall be stored in memory. Unfortunately the memory map can vary
from system to system, so there is no general rule which addresses
can be used for this.                           
-->

Dopodiche è necessario caricare le immagini (kernel, ramdisk iniziale
e dtb) in memoria. Per questa operazione occorre usare il comando
tftpboot passando l'indirizzo di memoria al quale deve deve caricata
l'immagine. Sfortunatamente la mappa di memoria varia da sistema a
sistema e non esiste una regola generale su quale indirizzo utilizzare.

</para><para>

<!--
On some systems, u-boot predefines a set of environment variables
with suitable load addresses: kernel_addr_r, ramdisk_addr_r and
fdt_addr_r. You can check whether they are defined by running
-->

Su alcuni sistemi, u-boot predefinisce una serie di varibili d'ambiente
con gli indirizzi da usare: kernel_addr_r, ramdisk_addr_r e fdt_addr_r.
È possibile verificare se tali variabili sono state definite con

<informalexample><screen>
printenv kernel_addr_r ramdisk_addr_r fdt_addr_r
</screen></informalexample>

<!--
If they are not defined, you have to check your system's
documentation for appropriate values and set them manually.  For
systems based on Allwinner SunXi SOCs (e.g.  the Allwinner A10,
architecture name <quote>sun4i</quote> or the Allwinner A20,
architecture name <quote>sun7i</quote>), you can e.g.  use the
follwing values:
-->

Se non sono state definite, è necessario trovare nella documentazione
i valori adatti al proprio sistema e impostarli manualmente. Per i
sistemi basati sui SOC Allwinner SunXi (per esempio per Allwinner A10
nome dell'architettura <quote>sun4i</quote>, o Allwinner A20, nome
dell'architettura <quote>sun7i</quote>) è possibile usare i seguenti
valori:

<informalexample><screen>
setenv kernel_addr_r 0x46000000
setenv fdt_addr_r 0x47000000
setenv ramdisk_addr_r 0x48000000
</screen></informalexample>

</para><para>

<!--
When the load addresses are defined, you can load the images
into memory from the previously defined tftp server with
-->

Dopo aver impostato gli indirizzi, è possibile caricare le immagini
in memoria dal server tftp definito in precedenza con

<informalexample><screen>
tftpboot ${kernel_addr_r} <!-- &lt;filename of the kernel image&gt; -->&lt;nome file dell'immagine del kernel&gt;
tftpboot ${fdt_addr_r} <!-- &lt;filename of the dtb&gt; -->&lt;nome file del dtb&gt;
tftpboot ${ramdisk_addr_r} <!-- &lt;filename of the initial ramdisk image&gt; -->&lt;nome file del ramdisk iniziale&gt;
</screen></informalexample>

</para><para>

<!--
The third part is setting the kernel commandline and actually
executing the loaded code.  U-boot passes the content of the
<quote>bootargs</quote> environment variable as commandline to the
kernel, so any parameters for the kernel and the installer - such as
the console device (see <xref linkend="boot-console"/>) or
preseeding options (see <xref linkend="installer-args"/> and <xref
linkend="appendix-preseed"/>) - can be set with a command like
-->

Il terzo passo è impostare la riga di comando per il kernel e avviare
l'esecuzione del codice appena caricato. U-boot passa il contenuto
della variabile d'ambiente <quote>bootargs</quote> come riga di comando
al kernel, quindi tutti parametri per il kernel e per l'installatore,
come il device della console (vedere <xref linkend="boot-console"/>)
oppure le opzioni di preconfigurazione (vedere <xref
linkend="installer-args"/> e <xref linkend="appendix-preseed"/>), possono
essere impostati con un comando simile a

<informalexample><screen>
setenv bootargs console=ttyS0,115200 rootwait panic=10
</screen></informalexample>

<!--
The exact command to execute the previously loaded code depends on
the image format used.  With uImage/uInitrd, the command is
-->

Il comando per eseguire il codice caricato in precedenza dipende dal
formato delle immagini usato. Con uImage/uInitrd, usare il comando

<informalexample><screen>
bootm ${kernel_addr_r} ${ramdisk_addr_r} ${fdt_addr_r}
</screen></informalexample>

<!--
and with native Linux images it is
-->

e con le immagini native Linux usare

<informalexample><screen>
bootz ${kernel_addr_r} ${ramdisk_addr_r}:${filesize} ${fdt_addr_r}
</screen></informalexample>

</para><para>

<!--
Note: When booting standard linux images, it is important to load
the initial ramdisk image after the kernel and the dtb as u-boot
sets the filesize variable to the size of the last file loaded and
the bootz command requires the size of the ramdisk image to work
correctly.  In case of booting a platform-specific kernel, i.e.  a
kernel without device-tree, simply omit the ${fdt_addr_r} parameter. 
-->

Nota: quando si avviano immagini linux è importante caricare l'immagine
del ramdisk iniziale dopo il kernel e il dtb poiché u-boot imposta il
valore della variabile filesize pari alla dimensione dell'ultimo file
caricato e il comando bootz ha bisogno di conoscere la dimensione
dell'immagine del ramdisk per funzionare correttamente. Per avviare un
kernel specifico per una piattaforma, vale a dire un kernel senza il
device-tree, è sufficiente omettere il parametro ${fdt_addr_r}.

</para>
   </sect3>
  </sect2>


<!-- # None of the arm systems supported in Jessie is able to boot from
     # CD/DVD -> commenting out the "Booting from CD-ROM section" for arm

  <sect2 arch="arm">
  <title>Booting from CD-ROM</title>
  <title>Avvio da CD-ROM</title>

&boot-installer-intro-cd.xml;

  </sect2>
-->

<!--
  <sect2 arch="arm" id="boot-firmware">
  <title>Booting from Firmware</title>
  <title>Avvio da firmware</title>

&boot-installer-intro-firmware.xml;

   <sect3 arch="arm" id="boot-firmware-ss4000e">
   <title>Booting the SS4000-E</title>
   <title>Avvio di SS4000-E</title>
<para>

Due to limitations in the SS4000-E firmware, it unfortunately is not
possible to boot the installer without the use of a serial port at
this time. To boot the installer, you will need a serial nullmodem
cable; a computer with a serial port<footnote id="arm-s4ke-port">

Sfortunatamente, a causa delle limitazioni nel firmware del SS4000-E,
non è possibile avviare l'installatore senza usare una porta seriale.
Per far partire l'installatore è necessario usare un cavo nullmodem,
un computer con una porta seriale<footnote id="arm-s4ke-port">

<para>

A USB serial converter will also work.

Va bene anche un adattatore USB seriale.

</para>

</footnote>; and a ribbon cable with a male DB9 connector at one end,
and a 10-pin .1" IDC header at the other<footnote id="arm-s4k-rib">

</footnote> e un cavo piatto con un connettore maschio DB9 da una parte
e un connettore IDC passo 2,54&nbsp;mm con 10 poli
dall'altra<footnote id="arm-s4k-rib">

<para>

This cable is often found in older desktop machines with builtin 9-pin
serial ports.

È possibile trovare questo cavo nelle vecchie macchine desktop che hanno
porte seriali con 9 poli.

</para>

</footnote>.

</para><para>

To boot the SS4000-E, use your serial nullmodem cable and the ribbon
cable to connect to the serial port of the SS4000-E, and reboot the
machine. You need to use a serial terminal application to communicate
with the machine; a good option on a &debian; GNU/Linux is to use the
<command>cu</command> program, in the package of the same name. Assuming
the serial port on your computer is to be found on
<filename>/dev/ttyS0</filename>, use the following command line:

Per avviare il SS4000-E, collegarsi alla porta seriale del SS4000-E
usando il cavo nullmodem e il cavo piatto poi riavviare la macchina.
È necessaria un'applicazione di emulazione del terminale per
comunicare con la macchina; su &debian; GNU/Linux si può usare il programma
<command>cu</command>, contenuto nell'omonimo pacchetto. Supponendo che
la porta seriale sul proprio computer sia <filename>/dev/ttyS0</filename>,
utilizzare la seguente riga di comando:

</para>

<informalexample><screen>
cu -lttyS0 -s115200
</screen></informalexample>

<para>

If using Windows, you may want to consider using the program
<classname>hyperterminal</classname>. Use a baud rate of 115200,
8 bits word length, no stop bits, and one parity bit.

Se si usa Windows, è possibile utilizzare il programma
<classname>hyperterminal</classname>. Usare 115200 bit per secondo,
8 bit di dati, nessun bit di stop e 1 bit di parità.

</para><para>

When the machine boots, you will see the following line of output:

Mentre la macchina si avvia, saranno visibili le seguenti righe:

</para>

<informalexample><screen>
No network interfaces found

EM-7210 ver.T04 2005-12-12 (For ver.AA)
== Executing boot script in 1.000 seconds - enter ^C to abort
</screen></informalexample>

<para>

At this point, hit Control-C to interrupt the boot
loader<footnote id="arm-s4ke-sec">

Adesso premere Control-C per arrestare l'avvio<footnote id="arm-s4ke-sec">

<para>

Note that you have only one second to do so; if you miss this window,
just powercycle the machine and try again.

Notare che si ha solo un secondo per farlo; se non si fa in tempo,
riavviare la macchina e riprovare.

</para>

</footnote>. This will give you the RedBoot prompt. Enter the
following commands:

</footnote>. In questo modo si accede al prompt di RedBoot, inserire
questi comandi:

<informalexample><screen>
load -v -r -b 0x01800000 -m ymodem ramdisk.gz
load -v -r -b 0x01008000 -m ymodem zImage
exec -c "console=ttyS0,115200 rw root=/dev/ram mem=256M@0xa0000000" -r 0x01800000
</screen></informalexample>

</para><para>

After every <command>load</command> command, the system will expect a
file to be transmitted using the YMODEM protocol. When using cu, make
sure you have the package <classname>lrzsz</classname> installed, then
hit enter, followed by the <quote>~&lt;</quote> escape sequence to start
an external program, and run <command>sb initrd.gz</command> or
<command>sb vmlinuz</command>.

Dopo ogni comando <command>load</command> il sistema si aspetta che sia
trasmesso un file usando il protocollo YMODEM. Con cu, assicurarsi che
il pacchetto <classname>lrzsz</classname> sia installato, poi premere
Invio, seguito dalla sequenza di escape <quote>~&lt;</quote> per avviare
un programma esterno ed eseguire <command>sb initrd.gz</command> o
<command>sb vmlinuz</command>.

</para><para>

Alternatively, it is possible to load the kernel and ramdisk using
HTTP rather than YMODEM. This is faster, but requires a working HTTP
server on the network. To do so, first switch the bootloader to RAM mode:

In alternativa è possibile caricare il kernel e il ramdisk usando HTTP
anziché YMODEM. Questo metodo è più veloce ma richiede un server HTTP
funzionante in rete. Mettere mettere in modalità RAM il bootloader:

<informalexample><screen>
fis load rammode
g
</screen></informalexample>

</para><para>

This will seemingly restart the machine; but in reality, it loads
redboot to RAM and restarts it from there. Not doing this step will cause
the system to hang in the necessary ip_address step that comes next.

In apparenza questo comando riavvia la macchina; in realtà carica redboot
in RAM e riavvia da lì. Saltando questo passo il sistema si bloccherà su
ip_address, uno dei passi successivi.

</para><para>

You will need to hit Ctrl-C again to interrupt the boot. Then:

È necessario premere di nuovo Ctrl-C per interrompere l'avvio. Poi:

<informalexample><screen>
ip_address -l <replaceable>192.168.2.249</replaceable> -h <replaceable>192.168.2.4</replaceable>
load -v -r -b 0x01800000 -m http /initrd.gz
load -v -r -b 0x01008000 -m http /zImage
exec -c "console=ttyS0,115200 rw root=/dev/ram mem=256M@0xa0000000" -r 0x01800000
</screen></informalexample>

Where <replaceable>192.168.2.249</replaceable> is the IP address of the
installed system and <replaceable>192.168.2.4</replaceable> the IP address
of the HTTP server containing the kernel and ramdisk files.

Dove <replaceable>192.168.2.249</replaceable> è l'indirizzo IP del sistema
che si sta installando e <replaceable>192.168.2.4</replaceable> è l'indirizzo
IP del server HTTP che contiene i file del kernel e del ramdisk.

</para><para>

The installer will now start as usual.

Adesso l'Installatore partirà come al solito.

</para>
   </sect3>
  </sect2>
-->
